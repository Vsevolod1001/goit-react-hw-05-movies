{"version":3,"file":"static/js/440.caed1331.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","services/publicationsApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"div\":\"MovieDetailsPage_div__3oaqE\",\"filmInfo\":\"MovieDetailsPage_filmInfo__u1grk\",\"filmImg\":\"MovieDetailsPage_filmImg__Uc4wh\",\"cardInfo\":\"MovieDetailsPage_cardInfo__RZnWh\"};","import { useParams, Link, Route, Routes, useLocation } from \"react-router-dom\"\nimport { useState, useEffect } from \"react\";\nimport s from './MovieDetailsPage.module.css'\nimport { getPublicationId } from \"services/publicationsApi\";\nimport { lazy } from \"react\";\n\n\n\nconst Cast = lazy(() => \n  import('../Cast/Cast').then(module => ({ default: module.Cast}))\n);\nconst Reviews = lazy(() => \n  import('../Reviews/Reviews').then(module => ({ default: module.Reviews}))\n);\n\nexport const MovieDetailsPage = () => {\n    const {movieId} = useParams();\n    const [item, setItem] = useState([]);\n    const location = useLocation();\n    \n    \n    \n    useEffect(() => {\n      async function FetchItem () {\n          try {\n              const card = await getPublicationId(movieId);                           \n              setItem([card])\n          } catch (error) {\n             \n          }\n      }\n      FetchItem();     \n    }, [movieId]);\n    \nreturn (\n        <div>\n            <hr />\n            <Link to={location?.state?.from ?? '/home'}>обратно к списку</Link>\n            {item.map(({genres, title, release_date, overview, poster_path, vote_average, id}) => (\n                <div className={s.div} key={id}>                       \n                <div><img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt={title} className={s.filmImg}/></div>\n                <div className={s.filmInfo}>                 \n                <h1>{title} ({parseFloat(release_date)})</h1>\n                <p>User Score: {vote_average}</p>\n                <h2>Overview:</h2>\n                <p>{overview}</p>\n                <h2>Genres:</h2>\n                {genres && genres.map(genre => (\n                 <li key={genre.id}>{genre.name}</li>\n             ))}\n                </div>\n            </div>\n            ))} \n            <hr />\n            <div className={s.cardInfo}>\n                <Link to={'cast'} state={{from: location?.state?.from ?? '/'}}>Cast</Link>\n                <Link to={'reviews'} state={{from: location?.state?.from ?? '/'}}>Reviews</Link>\n            </div>\n            <div>\n            <Routes>\n                <Route path=\"cast\" element={<Cast />}/>\n                <Route path=\"reviews\" element={<Reviews />}/>\n            </Routes>  \n            </div>\n        </div>\n    \n    )\n}\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst key = 'f8fb1aa4ecd91eaa841106c5d2d7056f';\n\nexport const getPublications = async () => {\n    const response = await axios.get(`/trending/movie/week?api_key=${key}`);    \n    return response.data.results;\n    \n}\nexport const getPublicationId = async (id) => {\n    const response = await axios.get(`/movie/${id}?api_key=${key}`);\n    return response.data;\n}\nexport const getPublicationCastId = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${key}`);\n    return response.data.cast;\n}\nexport const getPublicationReviewsId = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${key}`);\n    return response.data.results;\n}\nexport const getSearchPublication = async (searchMovie) => {\n    const response = await axios.get(`/search/movie?api_key=${key}&query=${searchMovie}`);\n    return response.data.results;\n}\n"],"names":["Cast","lazy","then","module","default","Reviews","MovieDetailsPage","movieId","useParams","useState","item","setItem","location","useLocation","useEffect","getPublicationId","card","FetchItem","to","state","from","map","genres","title","release_date","overview","poster_path","vote_average","id","className","s","src","alt","parseFloat","genre","name","path","element","axios","key","getPublications","response","data","results","getPublicationCastId","cast","getPublicationReviewsId","getSearchPublication","searchMovie"],"sourceRoot":""}