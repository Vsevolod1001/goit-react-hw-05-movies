{"version":3,"file":"static/js/186.ef1a15c7.chunk.js","mappings":"8QAMaA,EAAU,WACnB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAA4BH,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACf,8GAEgCC,EAAAA,EAAAA,IAAwBL,GAFxD,OAEaM,EAFb,OAGOP,EAAWO,GAHlB,sEAOOH,GAAU,GAPjB,2EADe,uBAAC,WAAD,wBAWfI,KACE,CAACP,KACW,IAAXE,GAEI,SAAC,KAAD,IAGe,IAAnBJ,EAAQU,QAEJ,wBACKV,EAAQW,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACX,2BACI,oCAAYD,MACZ,uBAAIC,MAFCF,SASf,+BACC","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect} from \"react\"\nimport { getPublicationReviewsId } from \"services/publicationsApi\"\nimport { useParams } from \"react-router\"\nimport { TailSpin } from  'react-loader-spinner'\n\n\nexport const Reviews = () => {\n    const [reviews, setReviews] = useState([])\n    const {movieId} = useParams();\n    const [IsLoad, setIsLoad] = useState(true)\n    \n    useEffect(() => {\n     async function FetchReviews () {\n         try {\n            const cardReview = await getPublicationReviewsId(movieId);\n            setReviews(cardReview)\n         } catch (error) {\n             \n         } finally {\n            setIsLoad(false)\n          } \n     }\n     FetchReviews();\n    }, [movieId])\n    if (IsLoad === true) {\n        return (\n            <TailSpin />\n        )\n    }\n    if (reviews.length !== 0) {\n        return (\n            <ul>\n                {reviews.map(({id, author, content}) => (\n                  <li key={id}>\n                      <p>author: {author}</p>\n                      <p>{content}</p>\n                  </li>  \n                ))}\n            </ul>\n        )\n    } else {\n        return (\n            <>\n             <p>We don`t have any reviews for this movie</p>\n            </>\n        )\n    }\n    // return (\n    //     <ul>           \n    //         {reviews.length > 0 ?\n    //         (reviews.map(({id, author, content}) => (\n    //             <li key={id}>\n    //                 <p>author: {author}</p>\n    //                 <p>{content}</p>\n    //             </li>\n    //         ))) : (<p>We don`t have any reviews for this movie</p>)}\n    //     </ul>\n    // )\n}"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","IsLoad","setIsLoad","useEffect","getPublicationReviewsId","cardReview","FetchReviews","length","map","id","author","content"],"sourceRoot":""}