{"version":3,"file":"static/js/184.7bcd999e.chunk.js","mappings":"2RAOaA,EAAa,WACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BL,EAAAA,EAAAA,WAAS,GAArC,eAAOM,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQN,EAAaO,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WAAM,wCAIf,2FACGL,GAAU,GADb,mBAGiCM,EAAAA,EAAAA,IAAqBH,GAHtD,OAIkC,KADpBI,EAHd,QAIuBC,SACXC,MAAM,4DAAD,OAAgBN,EAAhB,0GACLL,EAAgB,KAIpBH,EAAaY,GAVrB,yEAeOP,GAAU,GAfjB,6EAJe,sBACE,OAAVG,GADQ,mCAsBfO,KACE,CAACP,EAAOL,IAcX,OACI,gCACKC,IAAU,SAAC,KAAD,KACX,0BACI,mBAAQY,UAAU,YAAlB,UACI,kBAAMA,UAAU,OAAOC,SAjBlB,SAAAC,GACjBA,EAAEC,iBAEFhB,EAAgB,CAAEK,MAAOU,EAAEE,cAAcC,SAASb,MAAMc,QAEJ,KAAhDJ,EAAEE,cAAcC,SAASb,MAAMc,MAAMC,OAIzCL,EAAEE,cAAcI,QAHZV,MAAM,qIAWE,WAEQ,mBAAQW,KAAK,SAAST,UAAU,SAAhC,UACI,iBAAMA,UAAU,eAAhB,uBAGZ,kBACIA,UAAU,QACVS,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,iBAKhB9B,EAAUc,OAAS,IACpB,wBACKd,EAAU+B,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACX,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAM7B,GAAzC,SAAqD0B,KADhDD,a,yMC1E7BK,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAECC,EAAe,mCAAG,oGACJF,IAAAA,IAAA,uCAA0CC,IADtC,cACrBE,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAKfC,EAAgB,mCAAG,WAAOX,GAAP,uFACLK,IAAAA,IAAA,iBAAoBL,EAApB,oBAAkCM,IAD7B,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAIhBG,EAAoB,mCAAG,WAAOZ,GAAP,uFACTK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CM,IADjC,cAC1BE,EAD0B,yBAEzBA,EAASC,KAAKI,MAFW,2CAAH,sDAIpBC,EAAuB,mCAAG,WAAOd,GAAP,uFACZK,IAAAA,IAAA,iBAAoBL,EAApB,4BAA0CM,IAD9B,cAC7BE,EAD6B,yBAE5BA,EAASC,KAAKC,SAFc,2CAAH,sDAIvB9B,EAAoB,mCAAG,WAAOmC,GAAP,uFACTV,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAgDS,IADvC,cAC1BP,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH","sources":["components/MoviesPage/MoviesPage.jsx","services/publicationsApi.js"],"sourcesContent":["import  {useState, useEffect} from \"react\";\nimport { getSearchPublication } from \"services/publicationsApi\";\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\";\nimport { TailSpin } from  'react-loader-spinner'\n\n\n\nexport const MoviesPage = () => {  \n    const [searhFilm, setSearhFilm] = useState([])    \n    const [searchParams, setSearchParams] = useSearchParams();\n    const [isLoad, setIsLoad] = useState(false)\n    const location = useLocation();\n    const query = searchParams.get('query')\n\n    useEffect(() => {\n        if (query === null) {\n            return;\n        }\n     async function FetchSearch () {\n        setIsLoad(true);\n         try {\n             const cardSearch = await getSearchPublication(query)\n             if (cardSearch.length === 0) {\n                 alert(`по запросу \"${query}\", фильмов не найдено`)\n                 setSearchParams('');\n                 \n             } \n             \n             setSearhFilm(cardSearch)\n             \n         } catch (error) {\n             \n         } finally {\n            setIsLoad(false)\n          } \n     }\n     FetchSearch();\n    }, [query, setSearchParams])\n       \n    const hendleSubmit = e => {\n        e.preventDefault();\n       \n        setSearchParams({ query: e.currentTarget.elements.query.value });\n\n        if (e.currentTarget.elements.query.value.trim() === '') {\n            alert('введите название фильма')\n            return;            \n        }\n        e.currentTarget.reset();\n    }\n   \n    return ( \n        <>\n            {isLoad && <TailSpin />}\n            <div>\n                <header className=\"searchbar\">\n                    <form className=\"form\" onSubmit={hendleSubmit}>\n                        \n                            <button type=\"submit\" className=\"button\" >\n                                <span className=\"button-label\">Search</span>\n                            </button>\n                                            \n                    <input                        \n                        className=\"input\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search movies\"                        \n                        name=\"query\"\n                    />\n                    </form>\n                </header>\n            </div>\n            {searhFilm.length > 0 && (\n            <ul>\n                {searhFilm.map(({id, title}) => (\n                    <li key={id}>\n                        <Link to={`/movies/${id}`} state={{from: location}}>{title}</Link>\n                    </li>\n                ))}\n            </ul>\n            )}           \n        </>\n    )\n}","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\nconst key = 'f8fb1aa4ecd91eaa841106c5d2d7056f';\n\nexport const getPublications = async () => {\n    const response = await axios.get(`/trending/movie/week?api_key=${key}`);    \n    return response.data.results;\n    \n}\nexport const getPublicationId = async (id) => {\n    const response = await axios.get(`/movie/${id}?api_key=${key}`);\n    return response.data;\n}\nexport const getPublicationCastId = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${key}`);\n    return response.data.cast;\n}\nexport const getPublicationReviewsId = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${key}`);\n    return response.data.results;\n}\nexport const getSearchPublication = async (searchMovie) => {\n    const response = await axios.get(`/search/movie?api_key=${key}&query=${searchMovie}`);\n    return response.data.results;\n}\n"],"names":["MoviesPage","useState","searhFilm","setSearhFilm","useSearchParams","searchParams","setSearchParams","isLoad","setIsLoad","location","useLocation","query","get","useEffect","getSearchPublication","cardSearch","length","alert","FetchSearch","className","onSubmit","e","preventDefault","currentTarget","elements","value","trim","reset","type","autoComplete","autoFocus","placeholder","name","map","id","title","to","state","from","axios","key","getPublications","response","data","results","getPublicationId","getPublicationCastId","cast","getPublicationReviewsId","searchMovie"],"sourceRoot":""}